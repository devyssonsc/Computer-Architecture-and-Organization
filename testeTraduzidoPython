.data
txt_input:  .space 256    # Espaço para armazenar a entrada do texto
txt:        .space 256    # Espaço para armazenar o texto
newline:    .asciiz "\n"  # String para nova linha

.text
main:
    # Solicitar entrada de texto
    li $v0, 8
    la $a0, txt_input
    li $a1, 256
    syscall

    # Solicitar linha
    li $v0, 5
    syscall
    move $t1, $v0  # Armazenar linha em $t1

    # Solicitar coluna
    li $v0, 5
    syscall
    move $t2, $v0  # Armazenar coluna em $t2

    # Calcular tamanho do texto
    la $a0, txt_input
    jal calculate_length
    move $t3, $v0  # Armazenar tamanho do texto em $t3

    # Imprimir tamanho do texto
    li $v0, 1
    move $a0, $t3
    syscall

    # Imprimir linha
    li $v0, 1
    move $a0, $t1
    syscall

    # Loop para imprimir a caixa
    li $t0, 10  # Inicializar contador para 10 linhas

print_loop:
    beq $t0, $zero, end_program  # Se o contador for zero, encerrar o programa

    # Verificar condições e imprimir apropriado
    beq $t0, $t1, print_word_line  # Se l == linha, imprimir linha com texto
    beq $t0, $zero, print_border_line  # Se l == 0 ou l == 9, imprimir linha de borda
    j print_empty_line  # Caso contrário, imprimir linha vazia

print_word_line:
    # Imprimir linha com texto
    li $v0, 4
    la $a0, txt
    syscall
    j decrease_and_continue

print_border_line:
    # Imprimir linha de borda
    li $v0, 4
    la $a0, newline
    syscall
    j decrease_and_continue

print_empty_line:
    # Imprimir linha vazia
    li $v0, 4
    la $a0, newline
    syscall

decrease_and_continue:
    # Decrementar o contador e continuar o loop
    subi $t0, $t0, 1
    j print_loop

end_program:
    # Encerrar o programa
    li $v0, 10
    syscall

calculate_length:
    # Função para calcular o comprimento da string
    move $v0, $zero   # Inicializar o comprimento como zero
    calculate_length_loop:
        lb $t4, 0($a0)  # Carregar o próximo caractere da string
        beq $t4, $zero, calculate_length_done  # Se for o final da string, encerrar
        addi $a0, $a0, 1  # Avançar para o próximo caractere
        addi $v0, $v0, 1  # Incrementar o comprimento
        j calculate_length_loop  # Continuar o loop

    calculate_length_done:
    jr $ra  # Retornar
